{"version":3,"sources":["App.module.sass","App.js","index.js"],"names":["module","exports","app","dashboard","dashboardPlaceholder","weather","weatherDelete","inputCity","loading","input","inputCityAdd","inputCityDelete","error","apiKey","App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleInput","e","value","target","isValid","validate","message","setState","inputValue","isValidInput","string","search","handleInputClear","handleDelete","id","filteredData","state","data","filter","el","saveToStorage","preparedData","JSON","stringify","localStorage","setItem","handleAdd","_this$state","findIndex","item","name","toLowerCase","concat","url","isLoading","fetch","then","response","json","resp","cod","Error","dataResp","temp","main","description","iconcode","icon","newData","toConsumableArray","catch","err","renderDashboard","map","temperature","toFixed","iconUrl","react_default","a","createElement","className","styles","key","src","alt","onClick","renderEmpty","initData","parse","getItem","_cn","_this$state2","inputClass","cn","defineProperty","inputValid","inputInvalid","onChange","placeholder","disabled","react_loading_default","type","color","width","height","length","Component","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.e64ebaec.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__2iZOs\",\"dashboard\":\"App_dashboard__utq2B\",\"dashboardPlaceholder\":\"App_dashboardPlaceholder__2ZbMl\",\"weather\":\"App_weather__Hvd82\",\"weatherDelete\":\"App_weatherDelete__179gr\",\"inputCity\":\"App_inputCity__-s2Za\",\"loading\":\"App_loading__zyJLN\",\"input\":\"App_input__3vhaX\",\"inputCityAdd\":\"App_inputCityAdd__1zv7x\",\"inputCityDelete\":\"App_inputCityDelete__3_fEK\",\"error\":\"App_error__QTj2J\"};","import React, { Component } from 'react';\nimport cn from 'classnames';\nimport ReactLoading from 'react-loading';\nimport styles from './App.module.sass';\n\nconst apiKey = '4c0446e10175f6a8de3d2651830475bf';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    const initData = JSON.parse(localStorage.getItem('cities'));\n    this.state = {\n      inputValue: '',\n      isValidInput: null,\n      isLoading: false,\n      data: initData || [],\n      error: '',\n    };\n  }\n\n  handleInput = e => {\n    const { value } = e.target;\n    const isValid = this.validate(value);\n    const message =\n      !isValid && value !== '' ? `Use only Latin letters and numbers` : '';\n    this.setState({\n      inputValue: value,\n      isValidInput: value === '' ? null : isValid,\n      error: message,\n    });\n  };\n\n  validate = string => {\n    return string.search(/^[a-zA-Z0-9]+$/i) !== -1;\n  };\n\n  handleInputClear = () => {\n    this.setState({ inputValue: '', isValidInput: null, error: '' });\n  };\n\n  handleDelete = id => () => {\n    const { data } = this.state;\n    const filteredData = data.filter(el => el.id !== id);\n    this.saveToStorage(filteredData);\n    this.setState({ data: filteredData });\n  };\n\n  saveToStorage = data => {\n    const preparedData = JSON.stringify(data);\n    localStorage.setItem('cities', preparedData);\n  };\n\n  handleAdd = () => {\n    const { inputValue, isValidInput, data } = this.state;\n    const isCityInData =\n      data.findIndex(\n        item => item.name.toLowerCase() === inputValue.toLowerCase(),\n      ) !== -1;\n    if (isCityInData) {\n      const message = `The city ${inputValue} is already on the dashboard`;\n      this.setState({ inputValue: '', isValidInput: null, error: message });\n      return;\n    }\n    if (!inputValue || !isValidInput) {\n      return;\n    }\n    const url = `https://api.openweathermap.org/data/2.5/weather?q=${inputValue}&units=metric&appid=${apiKey}`;\n    this.setState({ isLoading: true, error: '' });\n    fetch(url)\n      .then(response => response.json())\n      .then(resp => {\n        if (resp.cod !== 200) {\n          throw new Error(resp.message);\n        }\n        const dataResp = {\n          id: resp.id,\n          name: resp.name,\n          temp: resp.main.temp,\n          description: resp.weather[0].description,\n          iconcode: resp.weather[0].icon,\n        };\n        const newData = [...data, dataResp];\n        this.saveToStorage(newData);\n        this.setState({\n          isLoading: false,\n          data: newData,\n          inputValue: '',\n          isValidInput: null,\n        });\n      })\n      .catch(err => {\n        this.setState({ isLoading: false, error: err.message });\n      });\n  };\n\n  renderDashboard = () => {\n    const { data } = this.state;\n    return data.map(item => {\n      const { id, name, temp, description, iconcode } = item;\n      const sign = temp >= 0 ? '+' : '';\n      const temperature = `${sign}${temp.toFixed(1)} â„ƒ`;\n      const iconUrl = 'http://openweathermap.org/img/w/' + iconcode + '.png';\n      return (\n        <div className={styles.weather} key={id}>\n          <h3>{name}</h3>\n          <div>{temperature}</div>\n          <img src={iconUrl} alt={description} />\n          <div onClick={this.handleDelete(id)} className={styles.weatherDelete}>\n            Delete\n          </div>\n        </div>\n      );\n    });\n  };\n\n  renderEmpty = () => (\n    <div className={styles.dashboardPlaceholder}>Dashboard is empty</div>\n  );\n\n  render() {\n    const { inputValue, isValidInput, data, isLoading, error } = this.state;\n    const inputClass = cn({\n      [styles.input]: true,\n      [styles.inputValid]: isValidInput === true,\n      [styles.inputInvalid]: isValidInput === false,\n    });\n    return (\n      <div className={styles.app}>\n        <div className={styles.inputCity}>\n          <input\n            className={inputClass}\n            onChange={this.handleInput}\n            value={inputValue}\n            placeholder=\"City...\"\n          />\n          <button\n            className={styles.inputCityAdd}\n            onClick={this.handleAdd}\n            disabled={isLoading}\n          >\n            Add\n          </button>\n          <button\n            className={styles.inputCityDelete}\n            onClick={this.handleInputClear}\n            disabled={isLoading}\n          >\n            Clear\n          </button>\n          {error && <div className={styles.error}>{error}</div>}\n          {isLoading && (\n            <ReactLoading\n              type=\"spinningBubbles\"\n              color=\"grey\"\n              width=\"40\"\n              height=\"40\"\n              className={styles.loading}\n            />\n          )}\n        </div>\n        <div className={styles.dashboard}>\n          {data.length > 0 ? this.renderDashboard() : this.renderEmpty()}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}